function [] = demViewer()
% DEMVIEWER - Efficient viewing and exploring of large DEMs
% 
%   DEMVIEWER is a tool to view and explore large DEMs (Digital Elevation
%   Models). The display  resolution changes dynamically to allow for
%   efficient viewing of large DEMs. For broad spatial extents, the view
%   resolution will be low.  Increased resolution is achieved by zooming
%   into smaller areas.
%
%   DEMVIEWER is a GUI that accepts no inputs. The user must first Open or
%   Import a data file.  Currently, DEMVIEWER is only capable of importing
%   DEMs in ARC Ascii format.  During the Import process, DEMVIEWER
%   converts ARC Ascii file to netCDF with three fields (x, y, z) and a few
%   user-supplied attributes about the DEM. DEMVIEWER works with both 
%   projected (cartesian) grids as well as those in spherical coordinates 
%   but has not been tested extensively with grids in spherical
%   coordinates. NetCDF files previously imported by DEMVIEWER can be 
%   displayed directly using the OPEN menu and supports data in Bathymetric 
%   Attributed Grid (.bag) format.  
%
%   APPEARANCE AND DISPLAY RESOLUTION - The appearance, including colormap,
%   color limits, and hillshade effect is controlled using the 
%   VIEW-> DEM Options menu. The display resolution  can be 
%   adjusted using the EDIT->Set Maximum Pixels to Render option. A larger 
%   number of pixels results in more resolution at a given zoom level, 
%   but slower load time. 
%
%   Navigation through the DEM is implemented with several self-explanatory
%   view controls and view mouse inputs, below:
%
%       'z' - zoom to a box z
%       '+' - zoom in
%       '-' - zoom out
%       'f' - reset zoom to full extents
%       'scroll wheel' - pan by pointing the mouse the direction where 
%       you want to pan, then use the scroll wheel in either direction
%
%   DEMVIEWER also allows the user to draw profiles and plot the elevations
%   along the specified profiles. The elevations are derived from the 
%   primary (highest) resolution of the DEM regardless of the zoom extent.
%
%   EXPORT OPTIONS - THE DEM can be exported into .mat, .xyz, and .png
%   file formats.  The exported data are provided at the current display
%   resolution and spatial extent.
%
% See Also read_bag


% Andrew Stevens, astevens@usgs.gov

gd.ver=1.20;
gd.modified='11/05/2015';
gd.recents=[];

% look for .ini with paths to recent dems for MRU menu
if exist('demViewer.ini','file')
    fp=which('demViewer.ini');
    gd.recents=demview_ini(fp);
    gd.recent_list=arrayfun(@(x)([x.pathname,x.filename]),...
        gd.recents,'un',0);
end

set(0,'units','pixels');
ssize=get(0,'screensize');
lp=round(ssize(3)*0.1);
bp=round(ssize(4)*0.05);
wp=round(ssize(3)*0.8);
hp=round(ssize(4)*0.9);


hf = figure('position',[lp bp wp hp],...
    'menubar','none',...
    'name','DEM Viewer',...
    'numbertitle','off',...
    'color',[0.941 0.941 0.941],...
    'WindowScrollWheelFcn',@scrollfcn,...
    'KeyReleaseFcn',@cpfcn);
gd.fig=hf;
gd.ax1 = axes('position',[0.0888 0.321 0.817 0.607],...
    'visible','off');

gd.panel1 = uipanel('parent',hf,...
    'units','normalized',...
    'position',[0.0888 0.097 0.817 0.176],...
    'title','Control Panel',...
    'visible','off');

%view tools
gd.zoom = uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.0313 0.6 0.15 0.25],...
    'string','Zoom Box',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@zoomto,...
    'tooltipstring','Hot Key = ''z''');
gd.reset = uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.0313 0.25 0.15 0.25],...
    'string','Reset Zoom',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@reset_zoom,...
    'tooltipstring','Hot Key = ''f''');
gd.zoomin=uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.2 0.25 0.15 0.25],...
    'string','Zoom In',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@zoomin,...
    'tooltipstring','Hot Key = ''+''');
gd.zoomout=uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.2 0.6 0.15 0.25],...
    'string','Zoom Out',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@zoomout,...
    'tooltipstring','Hot Key = ''-''');


%profile tools
gd.newprofile=uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.4 0.6 0.15 0.25],...
    'string','New Profile',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@new_profile,...
    'tooltipstring','Hot Key = ''n''');

uicontrol(gd.panel1,'style','text',...
    'units','normalized',...
    'position',[0.4 0.38 0.15 0.12],...
    'string','Selected Profile',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'horizontalalignment','left');
gd.selectprofile=uicontrol(gd.panel1,'style','popup',...
    'units','normalized',...
    'position',[0.4 0.25 0.15 0.125],...
    'string','None',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@select_profile,...
    'enable','off');

gd.editprofile=uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.575 0.6 0.15 0.25],...
    'string','Edit Selected',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@edit_profile,...
    'tooltipstring','Hot Key = ''e''',...
    'enable','off');
gd.deleteprofile=uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.575 0.25 0.15 0.25],...
    'string','Delete Selected',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@delete_profile,...
    'tooltipstring','Hot Key = ''d''',...
    'enable','off');
gd.plotprofile=uicontrol(gd.panel1,'style','pushbutton',...
    'units','normalized',...
    'position',[0.75 0.6 0.15 0.25],...
    'string','Plot Profile',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'callback',@plot_profile,...
    'tooltipstring','Hot Key = ''p''',...
    'enable','off');



gd.str = uicontrol(hf,'style','text',...
    'units','normalized',...
    'position',[0.0888 0.0323 0.545 0.0393],...
    'string','Open a file to begin',...
    'backgroundcolor',[0.941 0.941 0.941],...
    'horizontalalignment','left');


%menu items

%File
gd.fmenu=uimenu(hf,'label','File');
gd.open=uimenu(gd.fmenu,'label','Open',...
    'Callback',@local_open);
gd.rmenu=uimenu(gd.fmenu,'label','Recent',...
    'visible','off');
if ~isempty(gd.recents)
    set(gd.rmenu,'visible','on')
    for i=1:length(gd.recents)
        uimenu(gd.rmenu,'label',gd.recents(i).filename,...
            'callback',{@local_open,gd.recent_list{i}})
    end
end
gd.import=uimenu(gd.fmenu,'label','Import',...
    'callback',@local_import);
gd.savep=uimenu(gd.fmenu,'label','Save Profiles',...
    'callback',@save_profiles,...
    'visible','off');
gd.loadp=uimenu(gd.fmenu,'label','Load Profiles',...
    'callback',@load_profiles,...
    'visible','off');
gd.deleteallp=uimenu(gd.fmenu,'label','Delete All Profiles',...
    'callback',@delete_all_profiles,...
    'visible','off');

gd.mexport=uimenu(gd.fmenu,'label','Export',...
    'visible','off');
gd.export1=uimenu(gd.mexport,'label','XYZ',...
    'callback',@export_xyz);
gd.export2=uimenu(gd.mexport,'label','MAT',...
    'callback',@export_mat);
gd.export3=uimenu(gd.mexport,'label','PNG',...
    'callback',@export_png);
%edit
gd.editm=uimenu(hf,'label','Edit');
gd.set_max_grd=uimenu(gd.editm,'label','Maximum pixels to render',...
    'callback',@setmaxgrd);

%view
gd.view=uimenu(hf,'label','View');
gd.vmeta=uimenu(gd.view,'label','Metadata','visible','off',...
    'callback',@view_metadata);
gd.options=uimenu(gd.view,'label','DEM Options',...
    'callback',@bfgui_options,'visible','off');
gd.toolbar=uimenu(gd.view,'label','Hide Control Panel',...
    'callback',@toolbar_opt,'visible','off');

%help
gd.help=uimenu(hf,'label','Help');
gd.about=uimenu(gd.help,'label','About',...
    'callback',@about);


%initialize guidata
gd.guipath=[pwd,filesep];
gd.outpath=[pwd,filesep];
gd.ppath=[pwd,filesep];
gd.tools=1;

gd.cval=1;
gd.cmap=jet;
gd.invertcmap=0;
gd.hseffect=1;
gd.azimuth=220;
gd.altitude=35;
gd.zfactor=1;

gd.nump=0;
gd.maxgrd=700;

%progress widget
iconsClassName = 'com.mathworks.widgets.BusyAffordance$AffordanceSize';
iconsSizeEnums = javaMethod('values',iconsClassName);
SIZE_32x32 = iconsSizeEnums(2);  % (1) = 16x16,  (2) = 32x32

gd.jObj = com.mathworks.widgets.BusyAffordance(SIZE_32x32);  % icon, label
gd.jObj.setPaintsWhenStopped(false);  % default = false
gd.jObj.useWhiteDots(false);         % default = false (true is good for dark backgrounds)
javacomponent(gd.jObj.getComponent, [20,20,80,80], gcf);


guidata(hf,gd)
